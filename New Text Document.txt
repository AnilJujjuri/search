import time

from opcua import Client

 

# OPC UA connection settings

endpoint_url = "opc.tcp://MYTSL02946.lnties.com:53530/OPCUA/SimulationServer"

 

# Create OPC UA client

client = Client(endpoint_url)

device_node_id = []

device_node_id_with_ns_i = []

device_node_id_without_ns_i = []

 

try:

    # Connect to the OPC UA server

    client.connect()

    print("Connected!")

 

    objects_node_id = "ns=0;i=85"

    # Get the "Objects" folder node by NodeId

    objects_node = client.get_node(objects_node_id)

 

    # Browse and list all child nodes under the "Objects" folder

    for child_node in objects_node.get_children():

        print(f"Device Node Name: {child_node.get_browse_name().Name}, NodeId: {child_node.nodeid}")

        device_node_id.append(child_node.nodeid.to_string())

 

    # Separate the list into two based on ns and i values

    for node_id in device_node_id:

        if "ns=" in node_id and ";i=" in node_id:

            device_node_id_with_ns_i.append(node_id)

        else:

            device_node_id_without_ns_i.append(node_id)

 

    # Fetch data for device_node_id_with_ns_i if needed

    telemetry_data = {}

    for node_id in device_node_id_with_ns_i:
        node=client.get_node(node_id)
        for child_node in node.get_children():
            value = child_node.get_value()
            print(f"Node Name: {child_node.get_browse_name().Name}, NodeId: {child_node.nodeid}, Value: {value}")

 

    # You can also fetch data for device_node_id_without_ns_i if needed

 

    # Disconnect from the OPC UA server

    client.disconnect()

    print("Disconnected!")

 

except Exception as e:

    print(f"Error: {str(e)}")